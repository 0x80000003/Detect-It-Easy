// Detect It Easy: detection rule file

// Original written: DosX
// Author: BJNFNE
// GitHub: https://github.com/BJNFNE
// Telegram: @BJNFNE

const detect = main;

function main() {
    if (Binary.isHeuristicScan()) {

        const
            currentFileExtension = Binary.getFileSuffix().toLowerCase(),
            isBinaryFile = !Binary.isPlainText(),
            extensionsDb = [
                // Coktel Vision formats:
                { ext: ["vmd"], type: "format", name: "Video and Media Data", bin: true },
                { ext: ["mesh"], type: "format", name: "3D Collide Data", bin: true },
                { ext: ["cure"], type: "format", name: "Mesh configuration file", bin: false },
                { ext: ["tot"], type: "format", name: "Script file", bin: true },
                { ext: ["ext"], type: "format", name: "Script resource file", bin: true },
                { ext: ["ide"], type: "format", name: "Script function name offset", bin: true },
                { ext: ["stk", "itk", "jtk", "ltk"], type: "format", name: "STK10", bin: true },
                { ext: ["var"], type: "format", name: "Variable file", bin: true },
                { ext: ["cmp"], type: "format", name: "Sprite file", bin: true },
                { ext: ["tts"], type: "format", name: "Text to Speech file", bin: false },
                { ext: ["pag"], type: "format", name: "Update file", bin: false },
                { ext: ["bcd"], type: "format", name: "BCD (Information for new Application)", bin: false },
                // XPAT formats:
                { ext: ["xcs"], type: "format", name: "XPAT Compiled Script", bin: true },
                // Generic formats:
                { ext: ["flx"], type: "format", name: "FLIC", bin: true },
            ];

        for (var i = 0; i < extensionsDb.length; i++) {
            var extGroup = extensionsDb[i].ext;
            for (var j = 0; j < extGroup.length; j++) {
                if (extGroup[j] === currentFileExtension && extensionsDb[i].bin === isBinaryFile) {
                    if (_getNumberOfResults(extensionsDb[i]) < 1) {
                        _setResult("~" + extensionsDb[i].type, extensionsDb[i].name, String(), "by extension");
                    }
                    return null;
                }
            }
        }
    }
}