// Detect It Easy: detection rule file

// Author: DosX
// E-Mail: collab@kay-software.ru
// GitHub: https://github.com/DosX-dev
// Telegram: @DosX_dev

init("library", "Direct3D");

function detect() {
    if (PE.isLibraryPresentExp(/^d3d*/i) || PE.isExportFunctionPresentExp(/^d3d/i)) {
        bDetected = true;

        var runtimeLibrary = PE.isLibraryPresentExp(/^d3d\d/i);

        // d3d12.dll -> d3d[12].dll -> Direct3D v12
        if (runtimeLibrary) {
            var versionNumber = String(runtimeLibrary).slice(3, 5);

            if (isNumber(versionNumber)) { // 10+
                sVersion = versionNumber;
            } else { // 8, 9
                sVersion = versionNumber[0];
            }
        }

        var version = getVersionByExports();
        if (version && version !== sVersion) {
            sVersion += (sVersion ? "/" : String()) + version;
        }
    } else {
        var version = getVersionByExports();
        if (version) {
            sVersion = version;
            bDetected = true;
        }
    }

    return result();
}

// Retrieves the Direct3D version from the exports of the library
function getVersionByExports() {
    var exportName = PE.isExportFunctionPresentExp(/D3D\d{1,2}/i);
    if (exportName) {
        var versionMatch = String(exportName).match(/D3D(\d{1,2})/i);
        if (versionMatch && isNumber(versionMatch[1])) {
            return versionMatch[1];
        }
    }
    return null;
}

// Checks whether the resulting string is a number
function isNumber(str) {
    if (str.length === 0) return false;
    for (var n = 0; n < str.length; n++)
        for (var e = 0; e < 10 && str[n] !== "0123456789"[e]; e++)
            if (e === 9) return false;
    return true;
}