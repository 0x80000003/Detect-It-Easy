// DIE's signature file

init("compiler", "Watcom C/C++");

function detect(bShowType, bShowVersion, bShowOptions) {
    if (PE.compare( /*[Tt]*/ "'his is a Windows '" /*(?:95|NT)*/ , 0x4f)) {
        bDetected = true;
    } else if (PE.findString(PE.nEP, 32, "watcom") != -1) {
        bDetected = true;
    } else if (PE.compareEP("e9$$$$$$$$5351525589e583ec..b8........e8........a1........83c0..24..31d229c489e18b1d")) {
        sVersion = "1995";
        bDetected = true;
    } else if (PE.compareEP("e9$$$$$$$$535657558b7c24..8b7424..8b6c24..83fe..0f87........89f02eff")) {
        sVersion = "1995";
        bDetected = true;
    } else if (PE.compareEP("e9$$$$$$$$535657558b7424..8b7c24..8b6c24..83ff..0f87........89f82eff")) {
        sVersion = "1995";
        bDetected = true;
    } else if (PE.compareEP("e9$$$$$$$$535589e583ec..b8........e8........a1........83c0..24..29c489e38b15")) {
        sVersion = "1995";
        bDetected = true;
    } else if (PE.compareEP("e9$$$$$$$$535152565783ec..e8........a3........894424..8d4424..31dbe8")) {
        sVersion = "1995";
        bDetected = true;
    } else if (PE.compareEP("e9$$$$$$$$535657558b7424..8b7c24..8b6c24..83ff..0f87........2eff")) {
        sVersion = "2000";
        bDetected = true;
    } else if (PE.compareEP("c705................e9$$$$$$$$5351525589e583ec..b8........e8........a1........83c0..24..31d229c489e1")) {
        sVersion = "1995";
        bDetected = true;
    }

    _setLang("C/C++", bDetected);
    return result(bShowType, bShowVersion, bShowOptions);
}