function detect(){if(8<=Binary.getSize()&&Binary.compare("CAFEBABE")){bDetected=!0
var a=Binary.read_uint16(4,_BE)
switch(Binary.read_uint16(6,_BE)){case 45:sVersion="JDK 1.1"
break
case 46:sVersion="JDK 1.2"
break
case 47:sVersion="JDK 1.3"
break
case 48:sVersion="JDK 1.4"
break
case 49:sVersion="Java SE 5.0"
break
case 50:sVersion="Java SE 6"
break
case 51:sVersion="Java SE 7"
break
case 52:sVersion="Java SE 8"
break
case 53:sVersion="Java SE 9"
break
case 54:sVersion="Java SE 10"
break
case 55:sVersion="Java SE 11"
break
case 56:sVersion="Java SE 12"
break
case 57:sVersion="Java SE 13"
break
case 58:sVersion="Java SE 14"
break
case 59:sVersion="Java SE 15"
break
case 60:sVersion="Java SE 16"
break
case 61:sVersion="Java SE 17"
break
case 62:sVersion="Java SE 18"
break
case 63:sVersion="Java SE 19"
break
case 64:sVersion="Java SE 20"
break
case 65:sVersion="Java SE 21"
break
case 66:sVersion="Java SE 22"
break
case 67:sVersion="Java SE 23"
break
case 68:sVersion="Java SE 24"}if(sVersion&&a&&(sVersion+="."+a),bDetected&&Binary.isVerbose()){var e=8,s=Binary.read_uint16(e,_BE)
for(e+=2,pool=1;pool<s;pool++)switch(Binary.read_uint8(e)){case 1:e+=3+Binary.read_uint16(e+1,_BE)
break
case 3:case 4:e+=5
break
case 5:case 6:e+=9
break
case 7:case 8:case 16:e+=3
break
case 9:case 10:case 11:case 12:case 18:e+=5
break
case 15:e+=4
break
default:sOption("err unk tag:"+e)}a=Binary.read_uint16(e,_BE)
1&a&&sOption("ACC_PUBLIC"),2&a&&sOption("ACC_PRIVATE"),4&a&&sOption("ACC_PROTECTED"),8&a&&sOption("ACC_STATIC"),16&a&&sOption("ACC_FINAL"),32&a&&sOption("ACC_SUPER"),64&a&&sOption("ACC_VOLATILE"),128&a&&sOption("ACC_TRANSIENT"),256&a&&sOption("ACC_NATIVE"),512&a&&sOption("ACC_INTERFACE"),1024&a&&sOption("ACC_ABSTRACT"),2048&a&&sOption("ACC_STRICT")}}return sLang="Java",result()}meta("format","Java Class File (.CLASS)")
