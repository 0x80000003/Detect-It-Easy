init("compiler","MinGW")
includeScript("FPC")
function getMinGWVersion(){var e=""
var i=PE.section[".rdata"]
if(i){var t=i.FileOffset,r=i.FileSize,n=PE.findString(t,r,"GCC: ")
if(n!=-1){e=PE.getString(n,128)}if(e==""){var n=PE.findString(t,r,"gcc-")
if(n!=-1){e=PE.getString(n)
e=e.substring(0,e.indexOf("/"))}}}return e}function detect(){if(PE.getMajorLinkerVersion()==2){var e=PE.getMinorLinkerVersion()
if(!bFPC&&(e<=30||e==36||e==41||e==44||e==56)){if(PE.compare("'MZ'90000300000004000000FFFF0000B800000000000000400000000000000000000000000000000000000000000000000000000000000000000000800000000E1FBA0E00B409CD21B8014CCD21'This program cannot be run in DOS mode.\r\r\n$'00000000000000'PE'0000")){if(!PE.isSectionNamePresent(".rsrc")){bDetected=true}else{var i=PE.section[".rsrc"]
if(!PE.isSignaturePresent(i.FileOffset+i.FileOffset-512,512,"'Microsoft Corp.'")){bDetected=true}}}}}if(bDetected){sVersion=getMinGWVersion()}else{var t=PE.section[".buildid"],r=PE.section[".rdata"]
if(t&&r){bDetected=PE.isSignaturePresent(r.FileOffset,r.FileSize,"'Mingw'")}}if(bDetected&&!PE.isOverlayPresent()){sOptions="stripped"}_setLang("C/C++",bDetected)
return result()}